{"ast":null,"code":"var _jsxFileName = \"/Users/michaellam/Documents/spotify-mix/src/App.tsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Spotify from \"spotify-web-api-node\";\nimport TrackRow from './TrackRow.js';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport PlayListRow from './PlayListRow.js';\nconst {\n  CLIENT_ID,\n  CLIENT_SECRET\n} = process.env;\nconst spotifyWebAPI = new Spotify({\n  clientId: CLIENT_ID,\n  clientSecret: CLIENT_SECRET,\n  redirectUri: 'http://localhost:8888/callback/'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    const ACCESS_TOKEN = params.access_token;\n    this.state = {\n      loggedIn: ACCESS_TOKEN ? true : false\n    };\n\n    if (ACCESS_TOKEN) {\n      spotifyWebAPI.setAccessToken(ACCESS_TOKEN);\n    }\n\n    if (ACCESS_TOKEN) {\n      this.getPlayListName();\n    }\n\n    this.getCurrentSong();\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getCurrentSong() {\n    spotifyWebAPI.getMyCurrentPlaybackState({}).then(data => {\n      this.setState({\n        currSong: data.body.item.id\n      });\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n  }\n\n  getCurrentPlaylist() {\n    var songID = this.state.currSong;\n    spotifyWebAPI.getPlaylistTracks(\"22j362ix734nbwqdoqjnl3rri\", \"6RxCC9aUbbPzrsbMKO3k7o\").then(response => {\n      const results = response.body.items;\n      var playlistTracks = [];\n      var playlistTrackRow;\n      var curr; //move loop to actual js file while passing object\n\n      results.forEach(track => {\n        if (track.track.id === songID) {\n          curr = true;\n          playlistTrackRow = React.createElement(PlayListRow, {\n            current: curr,\n            key: track.track.id,\n            trackObject: track.track,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          });\n        } else {\n          curr = false;\n          playlistTrackRow = React.createElement(PlayListRow, {\n            current: curr,\n            key: track.track.id,\n            trackObject: track.track,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          });\n        }\n\n        playlistTracks.push(playlistTrackRow);\n      });\n      this.setState({\n        playlistRows: playlistTracks\n      });\n    }).catch(error => {\n      // do whatever you want with the error and then...playListName:listName\n      throw error;\n    });\n  }\n\n  getPlayListName() {\n    spotifyWebAPI.getPlaylist(\"22j362ix734nbwqdoqjnl3rri\", \"6RxCC9aUbbPzrsbMKO3k7o\").then(response => {\n      this.setState({\n        playListName: response.body.name\n      });\n      this.getCurrentPlaylist();\n    }, function (err) {\n      console.log('Something went wrong!', err);\n    });\n  } //potential use of e.target.elements.track.URI\n\n\n  addtoPlaylist(trackURI) {\n    var newTracks = [];\n    newTracks.push(trackURI);\n    spotifyWebAPI.addTracksToPlaylist('22j362ix734nbwqdoqjnl3rri', '6RxCC9aUbbPzrsbMKO3k7o', newTracks).then(response => {}, function (err) {\n      console.log('Something went wrong!', err);\n    });\n  }\n\n  searchChangeHandler(event) {\n    const searchTerm = event.target.value;\n    this.performSearch(searchTerm);\n  }\n\n  performSearch(searchTerm) {\n    spotifyWebAPI.search(searchTerm, ['track', 'artist']).then(response => {\n      const results = response.body.tracks.items;\n      var trackRows = [];\n      results.forEach(track => {\n        const trackRow = React.createElement(TrackRow, {\n          key: track.id,\n          trackObject: track,\n          addSong: this.addtoPlaylist,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        });\n        trackRows.push(trackRow);\n      });\n      this.setState({\n        rows: trackRows\n      });\n    }).catch(error => {\n      // do whatever you want with the error and then...\n      throw error;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"center-login-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.loggedIn ? null : React.createElement(\"button\", {\n      className: \"nicer-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Login to Spotify\"))), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-4 panel left-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"playlist-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.playListName), React.createElement(\"div\", {\n      className: \"playlist-tracks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.playlistRows)), React.createElement(\"div\", {\n      className: \"col-sm-4 panel right-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.searchChangeHandler.bind(this),\n      className: \"search-bar\",\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.state.rows))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/michaellam/Documents/spotify-mix/src/App.tsx"],"names":["React","Component","Spotify","TrackRow","PlayListRow","CLIENT_ID","CLIENT_SECRET","process","env","spotifyWebAPI","clientId","clientSecret","redirectUri","App","constructor","params","getHashParams","ACCESS_TOKEN","access_token","state","loggedIn","setAccessToken","getPlayListName","getCurrentSong","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","data","setState","currSong","body","item","id","err","console","log","getCurrentPlaylist","songID","getPlaylistTracks","response","results","items","playlistTracks","playlistTrackRow","curr","forEach","track","push","playlistRows","catch","error","getPlaylist","playListName","name","addtoPlaylist","trackURI","newTracks","addTracksToPlaylist","searchChangeHandler","event","searchTerm","target","value","performSearch","search","tracks","trackRows","trackRow","rows","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Spotify from \"spotify-web-api-node\";\nimport TrackRow from './TrackRow.js';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport PlayListRow from './PlayListRow.js';\nconst { CLIENT_ID, CLIENT_SECRET } = process.env; \n\nconst spotifyWebAPI = new Spotify({\n  clientId: CLIENT_ID,\n  clientSecret: CLIENT_SECRET,\n  redirectUri: 'http://localhost:8888/callback/'\n});\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    const ACCESS_TOKEN = params.access_token;\n\n\n    this.state = {\n      loggedIn: ACCESS_TOKEN ? true : false\n    } \n    if (ACCESS_TOKEN){\n      spotifyWebAPI.setAccessToken(ACCESS_TOKEN);\n    }\n    if (ACCESS_TOKEN){\n      this.getPlayListName();\n    }\n    \n    this.getCurrentSong();\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getCurrentSong(){\n    spotifyWebAPI.getMyCurrentPlaybackState({\n    })\n    .then((data) => {\n      this.setState({ currSong: data.body.item.id });\n    }, function(err) {\n      console.log('Something went wrong!', err);\n    });\n    \n  }\n\n\n  \n  getCurrentPlaylist(){\n    var songID = this.state.currSong;\n    spotifyWebAPI.getPlaylistTracks(\"22j362ix734nbwqdoqjnl3rri\",\"6RxCC9aUbbPzrsbMKO3k7o\")\n    .then((response) =>{\n      const results = response.body.items;\n      var playlistTracks = []\n      var playlistTrackRow;\n      var curr;\n      //move loop to actual js file while passing object\n        results.forEach((track)=>{\n          if (track.track.id === songID){\n            curr = true;\n            playlistTrackRow = <PlayListRow current = {curr} key = {track.track.id} trackObject={track.track}/>\n          }else{\n            curr = false;\n            playlistTrackRow = <PlayListRow current= {curr} key = {track.track.id} trackObject={track.track}/>\n          }\n          playlistTracks.push(playlistTrackRow)\n        })\n        this.setState({playlistRows: playlistTracks});\n    })\n    .catch(error => {\n      // do whatever you want with the error and then...playListName:listName\n      throw error;\n    })\n  }\n\n  getPlayListName(){\n    spotifyWebAPI.getPlaylist(\"22j362ix734nbwqdoqjnl3rri\",\"6RxCC9aUbbPzrsbMKO3k7o\")\n    .then((response) => {\n      this.setState({playListName: response.body.name});\n      this.getCurrentPlaylist();\n    }, function(err) {\n      console.log('Something went wrong!', err);\n    });\n  }\n  //potential use of e.target.elements.track.URI\n  addtoPlaylist(trackURI){\n    var newTracks = [];\n    newTracks.push(trackURI);\n    spotifyWebAPI.addTracksToPlaylist('22j362ix734nbwqdoqjnl3rri', '6RxCC9aUbbPzrsbMKO3k7o', newTracks)\n    .then((response) => {\n\n    }, function(err) {\n      console.log('Something went wrong!', err);\n    });\n  }\n\n  searchChangeHandler(event){\n    const searchTerm = event.target.value;\n    this.performSearch(searchTerm);\n  }\n\n  performSearch(searchTerm){\n    spotifyWebAPI.search(searchTerm,['track','artist'])\n    .then((response) =>{\n      const results = response.body.tracks.items;\n      var trackRows = []\n        results.forEach((track)=>{\n          const trackRow = <TrackRow key={track.id} trackObject={track} addSong={this.addtoPlaylist}/>\n          trackRows.push(trackRow)\n        })\n        this.setState({rows: trackRows})\n    })\n    .catch(error => {\n      // do whatever you want with the error and then...\n      throw error;\n    })\n  }\n \n\n    \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"center-login-button\">\n          <a href=\"http://localhost:8888\">\n              { this.state.loggedIn ? null: <button className = \"nicer-button\">Login to Spotify</button> }\n            </a>\n        </div>\n        \n        <div className = \"container-fluid\">\n          <div className =\"row\">\n            <div className=\"col-sm-2\"></div>\n            <div className = \"col-sm-4 panel left-panel\">\n              <h2 className = \"playlist-title\">{this.state.playListName}</h2>\n              <div className = \"playlist-tracks\">{this.state.playlistRows}</div>\n            </div>\n            <div className = \"col-sm-4 panel right-panel\">\n              <input onChange={this.searchChangeHandler.bind(this)} className= \"search-bar\" placeholder=\"Search...\"/>\n              {this.state.rows}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}